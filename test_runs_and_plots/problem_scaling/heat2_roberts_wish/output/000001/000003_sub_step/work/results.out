m0 =  0.08000000000000007 r =  1.1973887574069206
m =  3.5016199896978674e-05 alpha =  0.0002188512493561165 err_max =  inf
m =  7.325858497600942e-07 alpha =  0.010460670374218769 err_max =  0.003198294180786987
m =  1.0596276499814038e-07 alpha =  0.07232105631909275 err_max =  1.1815803890868892e-09
m0 =  0.08000000000000007 r =  1.1933396525092368
m =  3.495694414833975e-05 alpha =  0.00021848090092712325 err_max =  inf
m =  7.307270721257645e-07 alpha =  0.01045181565392165 err_max =  0.009574426639454736
m =  1.0564916425551161e-07 alpha =  0.0722904407716596 err_max =  3.731991493616249e-09
-----------------------< summary >-----------------------
solving on T1 = 3.141592653589793, T2 = 3.3015926535897933
no. of spatial points = [400, 400]
dx = [0.0025, 0.0025]
no. of time points on an interval = 2
    [0.00083 0.0025 ]
no. of time intervals = 32
no. of alphas = 6
    [0.0002188512493561165, 0.010460670374218769, 0.07232105631909275, 0.00021848090092712325, 0.01045181565392165, 0.0722904407716596]
Viability of the problem is not known.
rolling intervals = 2
dt (of one SDC interval) = 0.0025000000000000022
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 32
maxiter = 10
output document = None
tol = 1e-09
last error = [[inf, 0.003198294180786987, 1.1815803890868892e-09, 3.945399562610419e-12], [inf, 0.009574426639454736, 3.731991493616249e-09, 1.6103784972187896e-12]]
iterations of Paralpha = [3. 3.]
max iterations of Paralpha = 3.0
algorithm time = 1.54215 s
communication time = 0.43951 s
inner solver = custom
system_time_max = [0.15416812896728516, 0.12306690216064453, 0.12184810638427734]
system_time_min = [0.11861205101013184, 0.11826395988464355, 0.11885499954223633]
inner solver tols = [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 7.121506133296863e-10

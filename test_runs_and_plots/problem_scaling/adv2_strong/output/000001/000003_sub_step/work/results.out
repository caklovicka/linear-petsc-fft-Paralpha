m0 =  0.0064 r =  1.0
m =  2.871684119485703e-07 alpha =  2.2435032183482053e-05 err_max =  inf
m =  1.9236010824564635e-09 alpha =  0.003349256050489575 err_max =  0.004021288503463172
m =  1.574360503459087e-10 alpha =  0.040922219212119804 err_max =  9.062535272219563e-08
m0 =  0.0064 r =  0.9999853098286271
m =  2.871663026642316e-07 alpha =  2.2434867395643093e-05 err_max =  inf
m =  1.9235798888953803e-09 alpha =  0.003349243750135476 err_max =  0.004021291620081857
m =  1.5743402667681081e-10 alpha =  0.04092214406733521 err_max =  9.070645057285276e-08
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.00128
no. of spatial points = [800, 800]
dx = [0.00125, 0.00125]
no. of time points on an interval = 2
    [6.66667e-06 2.00000e-05]
no. of time intervals = 32
no. of alphas = 6
    [2.2435032183482053e-05, 0.003349256050489575, 0.040922219212119804, 2.2434867395643093e-05, 0.003349243750135476, 0.04092214406733521]
Viability of the problem is not known.
rolling intervals = 2
dt (of one SDC interval) = 2e-05
processors for spatial parallelization for solving (I - Q x A) are 2
processors for time interval parallelization are 32
maxiter = 10
output document = None
tol = 5e-10
last error = [[inf, 0.004021288503463172, 9.062535272219563e-08, 3.186046426684186e-10], [inf, 0.004021291620081857, 9.070645057285276e-08, 3.179123631014136e-10]]
iterations of Paralpha = [3. 3.]
max iterations of Paralpha = 3.0
algorithm time = 4.57196 s
communication time = 1.93806 s
inner solver = custom
system_time_max = [0.363588809967041, 0.3324599266052246, 0.319821834564209]
system_time_min = [0.3033571243286133, 0.29769396781921387, 0.29917192459106445]
inner solver tols = [1e-13, 1e-13, 1e-13, 1e-13, 1e-13, 1e-13]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 6.497821171818747e-10

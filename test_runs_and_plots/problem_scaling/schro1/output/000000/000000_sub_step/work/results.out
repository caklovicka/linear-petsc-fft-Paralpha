m0 =  0.002 r =  0.9997231841590437
m =  0.00017886067738438145 alpha =  0.04471516934609536 err_max =  inf
m =  5.348811696587113e-05 alpha =  0.14952452866686347 err_max =  0.0006734871676887799
on 3,  abs, rel err inf norm [from paralpha] = 3.705079970535238e-05, 3.706057436452341e-05, iter = 1, rolling = 0
m =  2.9250178978847272e-05 alpha =  0.27342689028958317 err_max =  3.542249577792589e-05
on 3,  abs, rel err inf norm [from paralpha] = 6.950560448928107e-06, 6.952394130251485e-06, iter = 2, rolling = 0
on 3,  abs, rel err inf norm [from paralpha] = 2.1144185699496747e-06, 2.1149763911311475e-06, iter = 3, rolling = 0
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0002
no. of spatial points = [600, 600]
dx = [0.033277870216306155, 0.033277870216306155]
no. of time points on an interval = 1
    [5.e-05]
no. of time intervals = 4
no. of alphas = 3
    [0.04471516934609536, 0.14952452866686347, 0.27342689028958317]
Viability of the problem is not known.
rolling intervals = 1
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 4
maxiter = 10
output document = None
tol = 1e-05
last error = [inf, 0.0006734871676887799, 3.542249577792589e-05, 7.305769633592085e-06]
iterations of Paralpha = [3.]
max iterations of Paralpha = 3.0
algorithm time = 0.59178 s
communication time = 0.16041 s
inner solver = custom
system_time_max = [0.12110495567321777, 0.09689593315124512, 0.10155701637268066]
system_time_min = [0.12072491645812988, 0.09258008003234863, 0.09397602081298828]
inner solver tols = [1e-06, 1e-06, 1e-06]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 2.1144185699496747e-06

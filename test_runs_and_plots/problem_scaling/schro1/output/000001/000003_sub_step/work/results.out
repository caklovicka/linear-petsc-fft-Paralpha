m0 =  0.016 r =  0.9997231841590437
m =  0.00014308854662565285 alpha =  0.004471517082051651 err_max =  inf
m =  1.3531542858527773e-05 alpha =  0.0472838084446021 err_max =  0.005171418340863432
on 31,  abs, rel err inf norm [from paralpha] = 2.5852910570125942e-05, 2.5857712498754122e-05, iter = 1, rolling = 0
m =  4.161199521560178e-06 alpha =  0.15375924109562017 err_max =  2.4377139423159555e-05
on 31,  abs, rel err inf norm [from paralpha] = 4.5031912772558784e-06, 4.504027701574671e-06, iter = 2, rolling = 0
on 31,  abs, rel err inf norm [from paralpha] = 2.9236142130154673e-06, 2.9241572461393064e-06, iter = 3, rolling = 0
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0016
no. of spatial points = [600, 600]
dx = [0.033277870216306155, 0.033277870216306155]
no. of time points on an interval = 1
    [5.e-05]
no. of time intervals = 32
no. of alphas = 3
    [0.004471517082051651, 0.0472838084446021, 0.15375924109562017]
Viability of the problem is not known.
rolling intervals = 1
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 32
maxiter = 10
output document = None
tol = 1e-05
last error = [inf, 0.005171418340863432, 2.4377139423159555e-05, 1.3456154915880703e-06]
iterations of Paralpha = [3.]
max iterations of Paralpha = 3.0
algorithm time = 1.10831 s
communication time = 0.30913 s
inner solver = custom
system_time_max = [0.3309171199798584, 0.14455509185791016, 0.1514449119567871]
system_time_min = [0.14405107498168945, 0.1130518913269043, 0.10968995094299316]
inner solver tols = [1e-08, 1e-08, 1e-08]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 2.9236142130154673e-06

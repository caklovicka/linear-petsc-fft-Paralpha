on 0,  abs, rel err inf norm [from paralpha] = 6.636372779424086e-13, 6.636811181326371e-13, iter = 1, rolling = 0
on 0,  abs, rel err inf norm [from paralpha] = 1.5134267890589914e-12, 1.5135219982860116e-12, iter = 1, rolling = 1
on 0,  abs, rel err inf norm [from paralpha] = 2.5666978147572187e-12, 2.566851505916458e-12, iter = 1, rolling = 2
on 0,  abs, rel err inf norm [from paralpha] = 3.734877546919381e-12, 3.735090316181712e-12, iter = 1, rolling = 3
on 0,  abs, rel err inf norm [from paralpha] = 5.076207803008602e-12, 5.076482819117238e-12, iter = 1, rolling = 4
on 0,  abs, rel err inf norm [from paralpha] = 7.0644330829279245e-12, 7.064796948943366e-12, iter = 1, rolling = 5
on 0,  abs, rel err inf norm [from paralpha] = 8.24759251318728e-12, 8.247996282709515e-12, iter = 1, rolling = 6
on 0,  abs, rel err inf norm [from paralpha] = 9.60582207254568e-12, 9.606268986780395e-12, iter = 1, rolling = 7
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0008
no. of spatial points = [1200, 1200]
dx = [0.01665278934221482, 0.01665278934221482]
no. of time points on an interval = 3
    [1.55051e-05 6.44949e-05 1.00000e-04]
no. of time intervals = 1
no. of alphas = 1
    [0]
Viability of the problem is not known.
rolling intervals = 8
dt (of one SDC interval) = 0.0001
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 1
maxiter = 1
output document = None
tol = 1e-12
last error = [inf, 0.0]
iterations of Paralpha = [1. 1. 1. 1. 1. 1. 1. 1.]
max iterations of Paralpha = 1.0
algorithm time = 35.84897 s
communication time = 0.00000 s
inner solver = custom
system_time_max = [4.418154001235962]
system_time_min = [3.2410240173339844]
inner solver tols = [1e-13, 1e-13, 1e-13, 1e-13, 1e-13, 1e-13, 1e-13, 1e-13]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 9.60582207254568e-12

on 0,  abs, rel err inf norm [from paralpha] = 8.663297268407268e-15, 8.66386956989315e-15, iter = 1, rolling = 0
on 0,  abs, rel err inf norm [from paralpha] = 1.6308567827247178e-14, 1.6309593794375462e-14, iter = 1, rolling = 1
on 0,  abs, rel err inf norm [from paralpha] = 3.3052777070461006e-14, 3.3054756235906516e-14, iter = 1, rolling = 2
on 0,  abs, rel err inf norm [from paralpha] = 7.608278680680559e-14, 7.60871211064504e-14, iter = 1, rolling = 3
on 0,  abs, rel err inf norm [from paralpha] = 6.212045067816015e-14, 6.212381620716826e-14, iter = 1, rolling = 4
on 0,  abs, rel err inf norm [from paralpha] = 8.620695913002308e-14, 8.621139937064164e-14, iter = 1, rolling = 5
on 0,  abs, rel err inf norm [from paralpha] = 7.082405517851718e-14, 7.082752244425278e-14, iter = 1, rolling = 6
on 0,  abs, rel err inf norm [from paralpha] = 6.261992491636055e-14, 6.262283833028917e-14, iter = 1, rolling = 7
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0008
no. of spatial points = [1200, 1200]
dx = [0.01665278934221482, 0.01665278934221482]
no. of time points on an interval = 3
    [1.55051e-05 6.44949e-05 1.00000e-04]
no. of time intervals = 1
no. of alphas = 1
    [0]
Viability of the problem is not known.
rolling intervals = 8
dt (of one SDC interval) = 0.0001
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 1
maxiter = 1
output document = None
tol = 1e-12
last error = [inf, 0.0]
iterations of Paralpha = [1. 1. 1. 1. 1. 1. 1. 1.]
max iterations of Paralpha = 1.0
algorithm time = 104.47004 s
communication time = 0.00000 s
inner solver = custom
system_time_max = [12.499186038970947]
system_time_min = [12.367523908615112]
inner solver tols = [1e-14, 1e-14, 1e-14, 1e-14, 1e-14, 1e-14, 1e-14, 1e-14]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 6.261992491636055e-14

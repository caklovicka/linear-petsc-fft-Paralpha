m0 =  0.002 r =  0.9999175088327885
m =  5.656809324611889e-07 alpha =  0.0001414202331152972 err_max =  inf
m =  9.513543588733896e-09 alpha =  0.00840893076185365 err_max =  0.0008000506018529833
on 3,  abs, rel err inf norm [from paralpha] = 1.1312803261688031e-07, 1.1313657053473938e-07, iter = 1, rolling = 0
m =  1.2337515135520702e-09 alpha =  0.06484184899373881 err_max =  1.1409798586231532e-07
on 3,  abs, rel err inf norm [from paralpha] = 9.699556126552292e-10, 9.70028816450577e-10, iter = 2, rolling = 0
on 3,  abs, rel err inf norm [from paralpha] = 3.1377958592549685e-11, 3.1380326727368715e-11, iter = 3, rolling = 0
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0002
no. of spatial points = [1100, 1100]
dx = [0.018165304268846504, 0.018165304268846504]
no. of time points on an interval = 2
    [1.66667e-05 5.00000e-05]
no. of time intervals = 4
no. of alphas = 3
    [0.0001414202331152972, 0.00840893076185365, 0.06484184899373881]
Viability of the problem is not known.
rolling intervals = 1
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 4
maxiter = 10
output document = None
tol = 1e-09
last error = [inf, 0.0008000506018529833, 1.1409798586231532e-07, 9.979125332705195e-10]
iterations of Paralpha = [3.]
max iterations of Paralpha = 3.0
algorithm time = 5.42657 s
communication time = 1.02739 s
inner solver = custom
system_time_max = [1.1414568424224854, 1.1382291316986084, 1.1852359771728516]
system_time_min = [1.1370608806610107, 1.1361849308013916, 1.1347711086273193]
inner solver tols = [1e-11, 1e-11, 1e-11]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 3.1377958592549685e-11

on 0,  abs, rel err inf norm [from paralpha] = 8.842385166075403e-12, 8.84309871379136e-12, iter = 1, rolling = 0
on 0,  abs, rel err inf norm [from paralpha] = 1.7704705855798037e-11, 1.7706103192982903e-11, iter = 1, rolling = 1
on 0,  abs, rel err inf norm [from paralpha] = 2.6574961218212197e-11, 2.6577012352115704e-11, iter = 1, rolling = 2
on 0,  abs, rel err inf norm [from paralpha] = 3.544155316363031e-11, 3.54442279831486e-11, iter = 1, rolling = 3
on 0,  abs, rel err inf norm [from paralpha] = 4.4306538107962345e-11, 4.4309807470641514e-11, iter = 1, rolling = 4
on 0,  abs, rel err inf norm [from paralpha] = 5.313655315881971e-11, 5.3140386321531534e-11, iter = 1, rolling = 5
on 0,  abs, rel err inf norm [from paralpha] = 6.198739435537441e-11, 6.19917654775962e-11, iter = 1, rolling = 6
on 0,  abs, rel err inf norm [from paralpha] = 7.085551568682138e-11, 7.086039937897686e-11, iter = 1, rolling = 7
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0004
no. of spatial points = [1100, 1100]
dx = [0.018165304268846504, 0.018165304268846504]
no. of time points on an interval = 2
    [1.66667e-05 5.00000e-05]
no. of time intervals = 1
no. of alphas = 1
    [0]
Viability of the problem is not known.
rolling intervals = 8
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 1
maxiter = 1
output document = None
tol = 1e-09
last error = [inf, 0.0]
iterations of Paralpha = [1. 1. 1. 1. 1. 1. 1. 1.]
max iterations of Paralpha = 1.0
algorithm time = 11.52544 s
communication time = 0.00000 s
inner solver = custom
system_time_max = [1.0897560119628906]
system_time_min = [1.0774061679840088]
inner solver tols = [1e-11, 1e-11, 1e-11, 1e-11, 1e-11, 1e-11, 1e-11, 1e-11]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 7.085551568682138e-11

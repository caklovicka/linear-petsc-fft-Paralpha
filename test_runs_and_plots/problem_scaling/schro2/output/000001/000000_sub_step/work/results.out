m0 =  0.002 r =  0.9999175088327885
m =  1.7893762825721438e-07 alpha =  4.473440706430359e-05 err_max =  inf
m =  1.6925344501340873e-09 alpha =  0.004729397798044884 err_max =  0.0007999732298725818
on 3,  abs, rel err inf norm [from paralpha] = 3.5756828950482397e-08, 3.575952756426908e-08, iter = 1, rolling = 0
m =  1.6460970529912866e-10 alpha =  0.04862816980950899 err_max =  3.597749761461928e-08
on 3,  abs, rel err inf norm [from paralpha] = 2.2075540396060362e-10, 2.2077206465435353e-10, iter = 2, rolling = 0
on 3,  abs, rel err inf norm [from paralpha] = 2.7250794428643367e-11, 2.725285108108436e-11, iter = 3, rolling = 0
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0002
no. of spatial points = [1100, 1100]
dx = [0.018165304268846504, 0.018165304268846504]
no. of time points on an interval = 2
    [1.66667e-05 5.00000e-05]
no. of time intervals = 4
no. of alphas = 3
    [4.473440706430359e-05, 0.004729397798044884, 0.04862816980950899]
Viability of the problem is not known.
rolling intervals = 1
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 4
maxiter = 10
output document = None
tol = 1e-09
last error = [inf, 0.0007999732298725818, 3.597749761461928e-08, 1.9363099382542935e-10]
iterations of Paralpha = [3.]
max iterations of Paralpha = 3.0
algorithm time = 5.67393 s
communication time = 1.07217 s
inner solver = custom
system_time_max = [1.193946123123169, 1.2350249290466309, 1.2356410026550293]
system_time_min = [1.1870059967041016, 1.1817259788513184, 1.19073486328125]
inner solver tols = [1e-12, 1e-12, 1e-12]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 2.7250794428643367e-11

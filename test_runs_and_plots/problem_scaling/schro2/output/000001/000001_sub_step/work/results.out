m0 =  0.004 r =  0.9999175088327885
m =  3.5787525651442875e-07 alpha =  4.473440706430359e-05 err_max =  inf
m =  3.3850689002681747e-09 alpha =  0.004729397798044884 err_max =  0.0015999519178671096
on 7,  abs, rel err inf norm [from paralpha] = 7.070536725556195e-08, 7.071024059878822e-08, iter = 1, rolling = 0
m =  3.2921941059825733e-10 alpha =  0.04862816980950899 err_max =  7.111226376493061e-08
on 7,  abs, rel err inf norm [from paralpha] = 4.0735846449079347e-10, 4.073865415334657e-10, iter = 2, rolling = 0
on 7,  abs, rel err inf norm [from paralpha] = 5.6690555009112516e-11, 5.669446238620383e-11, iter = 3, rolling = 0
-----------------------< summary >-----------------------
solving on T1 = 0, T2 = 0.0004
no. of spatial points = [1100, 1100]
dx = [0.018165304268846504, 0.018165304268846504]
no. of time points on an interval = 2
    [1.66667e-05 5.00000e-05]
no. of time intervals = 8
no. of alphas = 3
    [4.473440706430359e-05, 0.004729397798044884, 0.04862816980950899]
Viability of the problem is not known.
rolling intervals = 1
dt (of one SDC interval) = 5e-05
processors for spatial parallelization for solving (I - Q x A) are 1
processors for time interval parallelization are 8
maxiter = 10
output document = None
tol = 1e-09
last error = [inf, 0.0015999519178671096, 7.111226376493061e-08, 3.5189583826720134e-10]
iterations of Paralpha = [3.]
max iterations of Paralpha = 3.0
algorithm time = 6.18250 s
communication time = 1.35330 s
inner solver = custom
system_time_max = [1.2433078289031982, 1.2395250797271729, 1.2946748733520508]
system_time_min = [1.1879029273986816, 1.1796648502349854, 1.1763269901275635]
inner solver tols = [1e-12, 1e-12, 1e-12]
inner solver maxiter = 50
-----------------------< end summary >-----------------------
abs err = 5.6690555009112516e-11
